<% if (!hasParent) { %>
CLOSURE_DEFINES=%defines%;
CLOSURE_NO_DEPS=true;
MODULE_USE_DEBUG_MODE=true;
MODULE_INFO=%moduleInfo%;
MODULE_URIS=%moduleUris%;

<% } %>
(function(deps) {
  var headElement = document.getElementsByTagName('head')[0];

  if (!headElement) {
    return;
  }

  var writeScript = function(scriptText, src, isModule) {
    if (!scriptText) {
      return;
    }

    if (isModule) {
      scriptText = 'goog.loadModule(function(exports) {' +
          '"use strict";' + scriptText +
          '\n' +  // terminate any trailing single line comment.
          ';return exports' +
          '});' +
          '\n//# sourceURL=' + src + '\n';
    } else {
      scriptText += '\n//# sourceURL=' + src;
    }

    var scriptElement = document.createElement('script');

    try {
      // doesn't work on ie...
      scriptElement.appendChild(document.createTextNode(scriptText));
    } catch(e) {
      // IE has funky script nodes
      scriptElement.text = data;
    }

    headElement.appendChild(scriptElement);
  };
<% if (loadAsync) { %>
  var loadFile = function(src, index, callback) {
    var xhr = new XMLHttpRequest();
    xhr.open('get', src);
    xhr.send();
    xhr.onreadystatechange = function() {
      if (4 != xhr.readyState) {
        return;
      }

      var responseText = 400 > xhr.status && xhr.responseText ?
          xhr.responseText : null;
      callback(index, responseText);
    };
  };

  var loadedIndex = 0;
  var scriptTexts = [];
  scriptTexts.length = deps.length;
  var writeNextScript = function() {
    if (loadedIndex >= deps.length) {
    <% if (!hasParent) { %>
      if ('function' == typeof window.onGoogleClosureSourceLoad) {
        window.onGoogleClosureSourceLoad();
      }
    <% } %>
      return;
    }

    if (undefined === scriptTexts[loadedIndex]) {
      return;
    }

    writeScript(scriptTexts[loadedIndex], deps[loadedIndex][0],
        deps[loadedIndex][1]);
    loadedIndex++;
    writeNextScript();
  };

  for (var i = 0; i < deps.length; i++) {
    loadFile(deps[i][0], i, function(index, scriptText) {
      scriptTexts[index] = scriptText;
      writeNextScript();
    });
  }
<% } else { %>
  var loadFileSync = function(src) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('get', src, false);
      xhr.send();

      return xhr.status == 0 || xhr.status == 200 ?
          xhr.responseText : null;
    } catch (err) {
      return null;
    }
  };

  for (var i = 0; i < deps.length; i++) {
    var src = deps[i][0];
    var isModule = deps[i][1];
    var scriptText = loadFileSync(src);
    writeScript(scriptText, src, isModule);
  }
<% } %>
})(<%-depsArr%>);
